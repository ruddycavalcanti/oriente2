{"version":3,"sources":["../../src/pages/add-music-to-playlist/add-music-to-playlist.module.ts","../../src/providers/playlists-services.ts","../../src/models/playlist.ts","../../src/pages/add-music-to-playlist/add-music-to-playlist.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACa;AAEU;AAgBrE;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAdtC,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACZ,kFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,kFAAkB,CAAC;aAC7C;YACD,eAAe,EAAE;gBACf,kFAAkB;aACnB;YACD,SAAS,EAAC;gBACR,wFAAiB;aAClB;SACF,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AClBW;AAEN;AAEH;AAEoB;AAO7D;IAIE,2BACS,MAA0B;QAA1B,WAAM,GAAN,MAAM,CAAoB;IAElC,CAAC;IAEA,kCAAM,GAAN,UAAO,YAAY;QAEhB,sDAAsD;QAEtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAE7F,CAAC;IAKD,oCAAQ,GAAR,UACE,QAAQ,EACR,SAAS,EACT,YAAY;QAIZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,GAAI,QAAQ,CAAC;aACxD,MAAM,CAAG,IAAI,uEAAa,CACzB,QAAQ,EACP,SAAS,EACT,YAAY,CACX,CAAC,CAAC;IAIR,CAAC;IAMH,sCAAU,GAAV,UAAY,QAAQ;QAElB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAI,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IAG9D,CAAC;IAGD,8CAAkB,GAAlB,UAAmB,UAAU,EAAG,QAAQ;QAGtC,IAAI,UAAU,GAAG,qDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC;QAE1C,IAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,mBAAmB,GAAC,QAAQ,GAAC,MAAM,CAAC,CAAC;QAEvE,MAAM,CAAE,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,qDAAgB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAEjF,CAAC;IAED,8CAAkB,GAAlB,UAAmB,QAAQ;QACzB,IAAI,UAAU,GAAG,qDAAgB,EAAE,CAAC,GAAG,EAAE,CAAC;QAE1C,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,mBAAmB,GAAC,QAAQ,GAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAGxE,CAAC;IAED,yCAAa,GAAb,UAAc,UAAU,EAAG,QAAQ;QAElC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,MAAM,CAAC;YAC9D,UAAU,EAAE,UAAU;SACtB,CAAC,CAAC;IAEN,CAAC;IA3EU,iBAAiB;QAD7B,yEAAU,EAAE;yCAMK,kFAAmB;OALxB,iBAAiB,CAiF7B;IAAD,wBAAC;CAAA;AAjF6B;;;;;;;;;ACf9B;AAAA,oCAAoC;AAEpC;IAIE,uBACS,QAAe,EAChB,IAAW,EACX,YAAmB;QAC1B,2BAA2B;;QAHnB,aAAQ,GAAR,QAAQ,CAAO;QAChB,SAAI,GAAJ,IAAI,CAAO;QACX,iBAAY,GAAZ,YAAY,CAAO;IAI3B,CAAC;IAIH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACjByC;AACiE;AAG7C;AAES;AACV;AAO7D;IAuBE,4BAAmB,OAAsB,EACjC,SAAoB,EACjB,SAA0B,EAC3B,QAAyB,EAC1B,iBAAmC,EACjC,SAA0B,EAC3B,MAA2B,EAC3B,YAAyB;QAPhB,YAAO,GAAP,OAAO,CAAe;QACjC,cAAS,GAAT,SAAS,CAAW;QACjB,cAAS,GAAT,SAAS,CAAiB;QAC3B,aAAQ,GAAR,QAAQ,CAAiB;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAkB;QACjC,cAAS,GAAT,SAAS,CAAiB;QAC3B,WAAM,GAAN,MAAM,CAAqB;QAC3B,iBAAY,GAAZ,YAAY,CAAa;QAG7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC;IAEtD,CAAC;IAED,2CAAc,GAAd;QAAA,iBA0BC;QAzBE,IAAI,CAAC,cAAc,GAAG,yBAAyB,CAAC;QAEhD,iEAAiE;QAEjE,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAChD,aAAG,IAAI,UAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,EAApD,CAAoD,CAC5D,CAAC,YAAY,EAAE,CAAC;QAKf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,EAAE,EAAC,IAAI,CAAC,IAAI,IAAG,SAAS,CAAC,EAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAEzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IAIH,CAAC;IAIH,oCAAO,GAAP;QACG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAKF,kDAAqB,GAArB;QAAA,iBAyBC;QAtBC,EAAE,EAAC,IAAI,CAAC,mBAAmB,IAAI,SAAS,CAAC,EAAC;YAGzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,GAAG,WAAW,GAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;gBAClG,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,YAAY,EAAC,IAAI,CAAC,aAAa;gBAC/B,UAAU,EAAC,IAAI,CAAC,YAAY;gBAC5B,QAAQ,EAAC,IAAI,CAAC,SAAS;aAEzB,CAAC,CAAC,IAAI,CAAE,eAAK;gBAEb,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAEzB,CAAC,CAAC,CAAC;QAEP,CAAC;QAAA,IAAI,EAAC;YAEJ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAE1B,CAAC;IAGH,CAAC;IAID,wCAAW,GAAX;QAAA,iBA+CC;QA9CC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,gBAAgB;YACvB,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,kBAAkB;iBAChC;aACF;YACD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,UAAU;oBAChB,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,cAAI;wBACX,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAChC,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,cAAI;wBAGX,EAAE,EAAC,IAAI,CAAC,IAAI,IAAE,EAAE,CAAC,EAAC;4BAEhB,IAAI,QAAQ,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;4BAE1E,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,EAAC,IAAI,CAAC,IAAI,EAAG,KAAI,CAAC,KAAK,CAAC,CAAC;wBAIpE,CAAC;wBAAA,IAAI,EAAC;4BAEJ,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACpB,OAAO,EAAE,kDAAkD;gCAC3D,QAAQ,EAAE,IAAI;gCACd,QAAQ,EAAE,QAAQ;6BACnB,CAAC,CAAC,OAAO,EAAE,CAAC;wBACf,CAAC;oBAID,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAtJY,kBAAkB;QAJ9B,wEAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;WACG;SAC1C,CAAC;6EAwByC;YACtB,sEAAS;YACN,sEAAe;YAChB,wFAAc;YACR,uEAAiB;YACtB,kFAAe;YACnB,gFAAmB;YACd,YAAY;OA9BxB,kBAAkB,CA8J9B;IAAD,CAAC;AAAA;SA9JY,kBAAkB,sB","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddMusicToPlaylist } from './add-music-to-playlist';\n\nimport { PlaylistsServices } from '../../providers/playlists-services';\n\n@NgModule({\n    declarations: [\n      AddMusicToPlaylist,\n    ],\n    imports: [\n      IonicPageModule.forChild(AddMusicToPlaylist),\n    ],\n    entryComponents: [\n      AddMusicToPlaylist\n    ],\n    providers:[\n      PlaylistsServices\n    ]\n  })\n  export class AddMusicToPlaylistModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-music-to-playlist/add-music-to-playlist.module.ts","\n \nimport { PlaylistModel} from '../models/playlist';\n \n import { Injectable } from '@angular/core';\n\nimport * as firebase from 'firebase/app';\n\nimport {  AngularFireDatabase } from 'angularfire2/database';\n\n\n\n\n\n@Injectable()\nexport class PlaylistsServices {\n\n \n\n  constructor(\n   private dbFire:AngularFireDatabase){\n\n   }\n\n    listar(author_email){\n     \n       //return this.dbFire.list('playlists').valueChanges();\n \n       this.dbFire.database.ref('/playlists').orderByChild(\"author_email\").equalTo(author_email);\n       \n    }\n\n\n\n\n    savePost(\n      post_uid,\n      post_nome,\n      author_email\n     \n    ){\n       \n      return this.dbFire.database.ref(\"playlists/\"  + post_uid)\n      .update(  new PlaylistModel(\n        post_uid,\n         post_nome,\n         author_email\n         ));\n      \n  \n  \n    }\n  \n\n\n\n\n  removePost( post_uid){\n\n    return this.dbFire.list(\"/playlists/\" +  post_uid).remove();\n    \n    \n  }\n\n\n  uploadPhotoStorage(post_image , post_uid){\n\n\n    let storageRef = firebase.storage().ref();\n\n    const imageRef = storageRef.child('images/playlists/'+post_uid+'.jpg');\n\n    return  imageRef.putString(post_image, firebase.storage.StringFormat.DATA_URL);\n\n  }\n\n  removePhotoStorage(post_uid){\n    let storageRef = firebase.storage().ref();\n\n    return storageRef.child('images/playlists/'+post_uid+'.jpg').delete();\n\n\n  }\n  \n  updatePhotoDb(post_image , post_uid){\n\n   return  this.dbFire.database.ref(\"playlists/\"+  post_uid).update({ \n      post_image: post_image\n     });\n\n  }\n\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/playlists-services.ts","//import { Musica } from \"./musica\";\n\nexport class PlaylistModel {\n \n\n \n  constructor(\n    public post_uid:string,\n   public nome:string,\n   public author_email:string\n   //public musicas: Musica[] \n  ) {\n \n  }\n \n\n \n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/playlist.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams , AlertController, ViewController, ToastController, IonicPage} from 'ionic-angular';\n\n\nimport {  AngularFireDatabase  } from 'angularfire2/database';\n\nimport { PlaylistsServices } from '../../providers/playlists-services';\nimport { AuthProvider } from '../../providers/auth-provider';\n\n@IonicPage({\n  name: 'add-to-playlist',\n  segment: 'add-to-playlist'\n  }) \n@Component({\n  selector: 'page-add-music-to-playlist',\n  templateUrl: 'add-music-to-playlist.html',\n})\nexport class AddMusicToPlaylist {\n\n  playlists:any;\n\n  musicas: any;\n\n  musicaNome:any;\n  musicaKey:any;\n  musicaArtista:any;\n  musicaDuracao:any;\n  musicaMp3Url:any;\n\n  imagemPlaylist:any;\n\n  playlistSelecionada:any;\n\n\n  playlists2:any;\n\n  post:any;\n\n  email:any;\n\n  constructor(public navCtrl: NavController,\n   public navParams: NavParams, \n     private alertCtrl: AlertController,\n     public viewCtrl:  ViewController,\n    public playlistsServices:PlaylistsServices,\n     private toastCtrl: ToastController,\n     public dbFire: AngularFireDatabase,\n     public authProvider:AuthProvider\n       ) {\n\n        this.email = this.authProvider.currentUserEmail;\n        \n  }\n\n  ionViewDidLoad(){\n     this.imagemPlaylist = \"assets/imgs/noMusic.png\";\n\n     //this.playlists =  this.dbFire.list('playlists').valueChanges();\n     \n     this.playlists =  this.dbFire.list('/playlists/' , \n     ref => ref.orderByChild(\"author_email\").equalTo(this.email)\n   ).valueChanges();\n\n\n     \n\n     this.post = this.navParams.get(\"post\");\n     if(this.post!= undefined){\n     this.musicaKey = this.post.post_uid;\n     this.musicaNome = this.post.post_name;\n     this.musicaArtista = this.post.post_artista;\n     this.musicaMp3Url = this.post.musica_url;\n\n     console.log(this.post);\n    }else{\n      this.dismiss();\n    }\n\n      \n     \n  }\n\n\n\ndismiss() {\n   this.viewCtrl.dismiss();\n }\n\n\n\n\nsalvarMusicToPlaylist(){\n\n\n  if(this.playlistSelecionada != undefined){\n\n\n   this.dbFire.database.ref(\"/playlists/\" + this.playlistSelecionada + \"/musicas/\"+ this.musicaKey).update({\n         post_name: this.musicaNome,\n         post_artista:this.musicaArtista,\n         musica_url:this.musicaMp3Url,\n         post_uid:this.musicaKey\n\n      }).then( value => { \n\n       this.viewCtrl.dismiss();\n\n      });\n\n  }else{\n\n    this.viewCtrl.dismiss();\n\n  }\n\n\n}\n\n\n\naddPlaylist() {\n  let alert = this.alertCtrl.create({\n    title: 'Criar Playlist',\n    inputs: [\n      {\n        name: 'nome',\n        placeholder: 'Nome da playlist'\n      }\n    ],\n    buttons: [\n      {\n        text: 'Cancelar',\n        role: 'cancelar',\n        handler: data => {\n          console.log('Cancel clicked');\n        }\n      },\n      {\n        text: 'Salvar',\n        role: 'salvar',\n        handler: data => {\n\n\n          if(data.nome!=\"\"){ \n\n            let post_uid = this.dbFire.database.ref().child('playlists/').push().key;\n\n           this.playlistsServices.savePost(post_uid,data.nome , this.email);\n           \n\n\n        }else{\n           \n          this.toastCtrl.create({\n            message: 'É preciso escrever algum nome para sua playlist.',\n            duration: 3000,\n            position: 'middle'\n          }).present();\n        }\n\n\n\n        }\n      }\n    ]\n  });\n  alert.present();\n}\n\n\n\n\n\n  \n\n}\n\n\n\n\n\n          \n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-music-to-playlist/add-music-to-playlist.ts"],"sourceRoot":""}