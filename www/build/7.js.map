{"version":3,"sources":["../../src/pages/playlists/playlists.module.ts","../../src/providers/playlists-services.ts","../../src/models/playlist.ts","../../src/pages/playlists/playlists.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Playlists } from './playlists';\nimport { PlaylistsServices } from '../../providers/playlists-services';\n\n\n@NgModule({\n    declarations: [\n      Playlists,\n    ],\n    imports: [\n      IonicPageModule.forChild(Playlists),\n    ],\n    entryComponents: [\n      Playlists\n    ],\n    providers:[\n      PlaylistsServices\n    ]\n  })\n  export class PlaylistsModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/playlists/playlists.module.ts","\n \nimport { PlaylistModel} from '../models/playlist';\n \n import { Injectable } from '@angular/core';\n\nimport * as firebase from 'firebase/app';\n\nimport {  AngularFireDatabase } from 'angularfire2/database';\n\n\n\n\n\n@Injectable()\nexport class PlaylistsServices {\n\n \n\n  constructor(\n   private dbFire:AngularFireDatabase){\n\n   }\n\n    listar(author_email){\n     \n       //return this.dbFire.list('playlists').valueChanges();\n \n       this.dbFire.database.ref('/playlists').orderByChild(\"author_email\").equalTo(author_email);\n       \n    }\n\n\n\n\n    savePost(\n      post_uid,\n      post_nome,\n      author_email\n     \n    ){\n       \n      return this.dbFire.database.ref(\"playlists/\"  + post_uid)\n      .update(  new PlaylistModel(\n        post_uid,\n         post_nome,\n         author_email\n         ));\n      \n  \n  \n    }\n  \n\n\n\n\n  removePost( post_uid){\n\n    return this.dbFire.list(\"/playlists/\" +  post_uid).remove();\n    \n    \n  }\n\n\n  uploadPhotoStorage(post_image , post_uid){\n\n\n    let storageRef = firebase.storage().ref();\n\n    const imageRef = storageRef.child('images/playlists/'+post_uid+'.jpg');\n\n    return  imageRef.putString(post_image, firebase.storage.StringFormat.DATA_URL);\n\n  }\n\n  removePhotoStorage(post_uid){\n    let storageRef = firebase.storage().ref();\n\n    return storageRef.child('images/playlists/'+post_uid+'.jpg').delete();\n\n\n  }\n  \n  updatePhotoDb(post_image , post_uid){\n\n   return  this.dbFire.database.ref(\"playlists/\"+  post_uid).update({ \n      post_image: post_image\n     });\n\n  }\n\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/playlists-services.ts","//import { Musica } from \"./musica\";\n\nexport class PlaylistModel {\n \n\n \n  constructor(\n    public post_uid:string,\n   public nome:string,\n   public author_email:string\n   //public musicas: Musica[] \n  ) {\n \n  }\n \n\n \n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/playlist.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams , AlertController, IonicPage} from 'ionic-angular';\n\nimport {  AngularFireDatabase  } from 'angularfire2/database';\nimport { PlaylistsServices } from '../../providers/playlists-services';\n\nimport { AuthProvider } from '../../providers/auth-provider';\n \n@IonicPage({\n\tname: 'playlists',\n  segment: 'playlists'\n  })\n@Component({\n  selector: 'page-playlists',\n  templateUrl: 'playlists.html',\n})\nexport class Playlists {\n\n  playlists: any;\n\n \n  toastCtrl:any;\n\n  email:any;\n \n  constructor(public navCtrl: NavController,\n   public navParams: NavParams, \n     private alertCtrl: AlertController,\n   public dbFire: AngularFireDatabase,\n   public authProvider:AuthProvider,\n   public playlistsServices :PlaylistsServices\n       ) {\n\n       //this.produtoList =  this.dbFire.list('playlists').valueChanges();\n\n      this.email = this.authProvider.currentUserEmail;\n\n      this.playlists =  this.dbFire.list('/playlists/' , \n        ref => ref.orderByChild(\"author_email\").equalTo(this.email)\n      ).valueChanges(); \n\n\n\n///////////////\n\n/*\nthis.produtoRef = this.dbFire.database.ref('/playlists').orderByChild(\"author_email\").equalTo(this.email);\n\nthis.produtoRef.on('value', produtoList => {\n   let produtos = [];\n   //let produtosKey = []; \n   produtoList.forEach( produto => {\n       produtos.push(produto.val());\n      // produtosKey.push(produto.key);\n      return false;\n    });\n\n this.produtoList = produtos;\n console.log(this.produtoList);\n//this.produtoListKey = produtosKey;\n//this.loadedprodutoList = produtos;\n});\n*/\n    \n ///////////////\n\n //this.qtdMusicas();\n\n  }\n\n\n\n  qtdMusicas() {\n\n     this.dbFire.database.ref('/playlists/-LAQbV2S5z6gcr7uWtL4/musicas/').once('value').then(result=>{\n        console.log(result.numChildren());\n         return   result.numChildren();\n   \n     \n    })\n\n  }\n\n\n\n  tocarPlaylist(post){\n    console.log(post);\n  }\n\n\n\n\n  irParaPlaylist(event, post){\n    this.navCtrl.push(\"playlist\", { \n      'id':post.post_uid,\n      post:post\n    });\n  }\n\n\naddPlaylist() {\n\n  let alert = this.alertCtrl.create({\n    title: 'Criar Playlist',\n    inputs: [\n      {\n        name: 'nome',\n        placeholder: 'Nome da playlist'\n      }\n    ],\n    buttons: [\n      {\n        text: 'Cancelar',\n        role: 'cancel',\n        handler: data => {\n          console.log('Cancel clicked');\n        }\n      },\n      {\n        text: 'Salvar',\n        handler: data => {\n\n            if(data.nome!=\"\"){ \n\n              let post_uid = this.dbFire.database.ref().child('playlists/').push().key;\n\n             this.playlistsServices.savePost(post_uid, data.nome , this.email);\n             \n\n\n          }else{\n             this.toastCtrl.create({\n              message: 'É preciso escrever algum nome para sua playlist.',\n              duration: 3000,\n              position: 'middle'\n            }).present();\n          }\n\n        }\n      }\n    ]\n  });\n  alert.present();\n}\n\n\n\n\neditar(post_uid, playlistNome) {\n\n  let alert = this.alertCtrl.create({\n    title: 'O que você deseja fazer ?',\n    \n    buttons: [\n      \n      {\n        text: 'Atualizar Nome',\n        handler: data => {\n\n          this.editarNome(post_uid, playlistNome);\n\n        }\n      },\n      {\n        text: 'Apagar',\n        handler: data => {\n\n         this.playlistsServices.removePost(post_uid);\n\n        }\n      },\n      {\n        text: 'Cancelar',\n        role: 'cancel',\n        handler: data => {\n          console.log('Cancel clicked');\n        }\n      },\n    ]\n  });\n  alert.present();\n}\n\n\nremover(post_uid: string){\n\n   this.playlistsServices.removePost(post_uid);\n}\n\n\n\n  editarNome(post_uid: string, playlistNome: string){\n      \n      let alert = this.alertCtrl.create({\n    title: 'Atualizar Nome da Playlist',\n    inputs: [\n      {\n        name: 'nome',\n        placeholder: 'Nome da playlist',\n        value: playlistNome\n      }\n    ],\n    buttons: [\n      {\n        text: 'Cancelar',\n        role: 'cancel',\n        handler: data => {\n          console.log('Cancel clicked');\n        }\n      },\n      {\n        text: 'Salvar',\n        handler: data => {\n\n            this.playlistsServices.savePost(post_uid,data.nome, this.email);\n\n\n        }\n      }\n    ]\n  });\n  alert.present();\n\n  }\n\n\n  \n\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/playlists/playlists.ts"],"sourceRoot":""}